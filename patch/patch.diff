diff -ur a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java
--- a/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java	Wed Apr 20 08:50:20 2016
+++ b/packages/services/Telecomm/src/com/android/server/telecom/CallAudioManager.java	Thu May 12 01:31:40 2016
@@ -481,8 +481,18 @@
 
         Call call = CallsManager.getInstance().getForegroundCall();
         boolean setMsimAudioParams = SystemProperties.getBoolean("ro.multisim.set_audio_params", false);
+        boolean setSamsungRealcallParams = SystemProperties.getBoolean("ro.telephony.samsung.realcall", false);
 
         Log.v(this, "Request to change audio mode from %d to %d", oldMode, newMode);
+
+        if(setSamsungRealcallParams) {
+            if(newMode == 0) {
+                mAudioManager.setParameters("realcall=off");
+            } else if(newMode == AudioManager.MODE_IN_COMMUNICATION || newMode == AudioManager.MODE_RINGTONE
+                || newMode == AudioManager.MODE_IN_CALL) {
+                    mAudioManager.setParameters("realcall=on");
+            }
+        }
 
         if (oldMode != newMode) {
             if (oldMode == AudioManager.MODE_IN_CALL && newMode == AudioManager.MODE_RINGTONE) {

diff -ur a/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java b/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java
--- a/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java	Mon Jun 20 17:28:46 2016
+++ b/hardware/qcom/fm/fmapp2/src/com/caf/fmradio/FMRadioService.java	Mon Jun 27 10:45:01 2016
@@ -916,7 +916,13 @@
             && (true == startA2dpPlayback())) {
             mOverA2DP=true;
             Log.d(LOGTAG, "Audio source set it as A2DP");
-            AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_BT_A2DP);
+            mAudioManager.setMode(AudioManager.MODE_IN_CALL);
+            mAudioManager.setSpeakerphoneOn(false);
+            mAudioManager.setBluetoothScoOn(true);
+            mAudioManager.setParameters("fm_mode=on");
+            mAudioManager.setParameters("fm_radio_mute=0");
+            mAudioManager.setParameters("fm_radio_volume=on");
+            mAudioManager.setParameters("FMRadioVol=0.1496235728");
        } else {
            Log.d(LOGTAG, "FMRadio: Requesting to start FM");
            //reason for resending the Speaker option is we are sending
@@ -925,10 +931,22 @@
            if (isSpeakerEnabled()) {
                mSpeakerPhoneOn = true;
                Log.d(LOGTAG, "Audio source set it as speaker");
-               AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_SPEAKER);
+               mAudioManager.setMode(AudioManager.MODE_IN_CALL);
+               mAudioManager.setBluetoothScoOn(false);
+               mAudioManager.setSpeakerphoneOn(true);
+               mAudioManager.setParameters("fm_mode=on");
+               mAudioManager.setParameters("fm_radio_mute=0");
+               mAudioManager.setParameters("fm_radio_volume=on");
+               mAudioManager.setParameters("FMRadioVol=0.1496235728");
            } else {
                Log.d(LOGTAG, "Audio source set it as headset");
-               AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+               mAudioManager.setBluetoothScoOn(false);
+               mAudioManager.setSpeakerphoneOn(false);
+               mAudioManager.setMode(AudioManager.MODE_IN_CALL);
+               mAudioManager.setParameters("fm_mode=on");
+               mAudioManager.setParameters("fm_radio_mute=0");
+               mAudioManager.setParameters("fm_radio_volume=on");
+               mAudioManager.setParameters("FMRadioVol=0.1496235728");
            }
            AudioSystem.setDeviceConnectionState(AudioSystem.DEVICE_OUT_FM,
                                AudioSystem.DEVICE_STATE_AVAILABLE, "");
@@ -942,6 +960,10 @@
 
    private void stopFM(){
        Log.d(LOGTAG, "In stopFM");
+       mAudioManager.setMode(0);
+       mAudioManager.setParameters("fm_mode=off");
+       mAudioManager.setParameters("fm_radio_mute=1");
+       mAudioManager.setParameters("fm_radio_volume=off");
        if (mOverA2DP==true){
            mOverA2DP=false;
            stopA2dpPlayback();
@@ -955,6 +977,9 @@
 
    private void resetFM(){
        Log.d(LOGTAG, "resetFM");
+       mAudioManager.setParameters("fm_mode=off");
+       mAudioManager.setParameters("fm_radio_mute=1");
+       mAudioManager.setParameters("fm_radio_volume=off");
        if (mOverA2DP==true){
            mOverA2DP=false;
            resetA2dpPlayback();
@@ -1168,6 +1193,7 @@
                if (audioManager != null) {
                    Log.d(LOGTAG, "Mute");
                    mMuted = true;
+                   audioManager.setParameters("fm_radio_mute=1");
                    audioManager.setStreamMute(AudioManager.STREAM_MUSIC,true);
                }
            }
@@ -1258,7 +1284,7 @@
    private Runnable mSpeakerDisableTask = new Runnable() {
       public void run() {
          Log.v(LOGTAG, "Disabling Speaker");
-         AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+         mAudioManager.setSpeakerphoneOn(false);
       }
    };
 
@@ -1938,7 +1964,7 @@
       if ( mSpeakerPhoneOn)
       {
           mSpeakerPhoneOn = false;
-          AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+          mAudioManager.setSpeakerphoneOn(false);
       }
       if (isFmRecordingOn())
       {
@@ -2094,7 +2120,7 @@
                 if (isFmRecordingOn())
                     stopRecording();
                 stopFM();
-               AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+                mAudioManager.setSpeakerphoneOn(false);
                if (mMuted) {
                    setAudioPath(true);
                } else {
@@ -2103,7 +2129,7 @@
                    unMute();
                }
            } else {
-               AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_NONE);
+               mAudioManager.setSpeakerphoneOn(false);
            }
            if (analogmode)
                 startFM();
@@ -2130,7 +2156,7 @@
                      unMute();
                  }
            }
-           AudioSystem.setForceUse(AudioSystem.FOR_MEDIA, AudioSystem.FORCE_SPEAKER);
+           mAudioManager.setSpeakerphoneOn(true);
            if (analogmode)
                 startFM();
        }
@@ -2231,6 +2257,7 @@
       if (audioManager != null)
       {
          mMuted = true;
+         audioManager.setParameters("fm_radio_mute=1");
          audioManager.setStreamMute(AudioManager.STREAM_MUSIC,true);
       }
       return bCommandSent;
@@ -2251,6 +2278,7 @@
       if (audioManager != null)
       {
          mMuted = false;
+         audioManager.setParameters("fm_radio_mute=0");
          audioManager.setStreamMute(AudioManager.STREAM_MUSIC,false);
          if (mResumeAfterCall)
          {
